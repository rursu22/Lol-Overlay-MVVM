<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:fa="http://schemas.fontawesome.io/icons/"
                    xmlns:utils="clr-namespace:Lol_Overlay_MVVM.Utils">


    <utils:StringNullOrEmptyToVisibilityConverter 
        x:Key="StringNullOrEmptyToVisibilityConverter" />

    <FontFamily x:Key="Montserrat">
        ../Fonts/Montserrat-Regular.ttf#Montserrat
    </FontFamily>

    <FontFamily x:Key="Lato" >
        ../Fonts/Lato-Regular.ttf#Lato
    </FontFamily>

    <FontFamily x:Key="Poppins" >
        ../Fonts/Poppins-Regular.ttf#Poppins
    </FontFamily>

    <FontFamily x:Key="Poppins-Semibold" >
        ../Fonts/Poppins-SemiBold.ttf#Poppins SemiBold
    </FontFamily>

    <Style x:Key="ShowPasswordButton" TargetType="CheckBox">
        <Setter Property="Width" Value="20"/>
        <Setter Property="Height" Value="20"/>

        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource BackgroundColorText}" />
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="FontSize" Value="12" />
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="fa:Awesome.Content" Value="EyeSlash" />
        <Setter Property="Cursor" Value="Hand" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="fa:Awesome.Content" Value="Eye" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="fa:Awesome.Content" Value="Eye" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="HoverRoundButton" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource BackgroundColorText}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderColor}"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="FontFamily" Value="Segoe UI Variable Text Semibold" />
        <Setter Property="Width" Value="80" />
        <Setter Property="Height" Value="60" />
        <Setter Property="FontSize" Value="28" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" CornerRadius="5">
                        <Viewbox Stretch="Uniform" StretchDirection="DownOnly" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0,0,0,0">
                            <ContentPresenter Content="{TemplateBinding Content}" />
                        </Viewbox>

                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="bd" Property="Background" Value="{DynamicResource HoverColor}"/>
                            <Setter TargetName="bd" Property="BorderBrush" Value="{DynamicResource BackgroundColorText}"/>
                            <Setter Property="Foreground" Value="{DynamicResource BackgroundColorText}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="bd" Property="Background" Value="{DynamicResource HoverColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="WatermarkPasswordBox" TargetType="PasswordBox">
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="8,0"/>
        <Setter Property="Background" Value="{DynamicResource BackgroundColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource BackgroundColorText}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderColor}"/>
        <Setter Property="BorderThickness" Value="0,0,0,2"/>
        <Setter Property="FontFamily" Value="Segoe UI Variable Text Semibold"/>
        <Setter Property="FontSize" Value="28"/>
        <Setter Property="CaretBrush" Value="{DynamicResource BackgroundColorText}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="PasswordBox">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="5">
                        <Grid>
                            <ScrollViewer x:Name="PART_ContentHost"
                        Margin="{TemplateBinding Padding}"
                        VerticalAlignment="Center"
                        HorizontalAlignment="Stretch"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                        Background="Transparent"/>

                            <TextBlock x:Name="PART_Watermark"
                     Text="{TemplateBinding Tag}"
                     Foreground="{DynamicResource BackgroundColorText}"
                     FontFamily="{TemplateBinding FontFamily}"
                     FontSize="{TemplateBinding FontSize}"
                     Margin="{TemplateBinding Padding}"
                     HorizontalAlignment="Center"
                     VerticalAlignment="Center"
                     IsHitTestVisible="False"
                     Visibility="{Binding 
                       Path=(utils:PasswordBoxUtils.BoundPassword),
                       RelativeSource={RelativeSource TemplatedParent},
                       Converter={StaticResource StringNullOrEmptyToVisibilityConverter}}"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="WatermarkTextBox" TargetType="TextBox">
        <Setter Property="CaretBrush" Value="{DynamicResource BackgroundColorText}" />
        <Setter Property="Foreground" Value="{DynamicResource BackgroundColorText}" />
        <Setter Property="FontSize" Value="24" />
        <Setter Property="FontFamily" Value="Segoe UI Variable Text Semibold" />
        <Setter Property="Width" Value="400" />
        <Setter Property="Height" Value="70" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="TextAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border BorderBrush="{DynamicResource BorderColor}" BorderThickness="0,0,0,2" Margin="0,0,0,0" CornerRadius="5">
                        <Grid>
                            <ScrollViewer x:Name="PART_ContentHost"/>
                            <TextBlock x:Name="Watermark"
                     Text="{TemplateBinding Tag}"
                     Foreground="{DynamicResource BackgroundColorText}"
                     Margin="0,0,0,0"
                     VerticalAlignment="Center"
                     IsHitTestVisible="False"
                     Visibility="Collapsed" FontSize="28" FontFamily="Segoe UI Variable Text Semibold"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Text" Value="">
                            <Setter TargetName="Watermark" Property="Visibility" Value="Visible"/>
                        </Trigger>

                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="Watermark" Property="Visibility" Value="Hidden" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CloseButton" TargetType="Button">
        <Setter Property="Width" Value="30" />
        <Setter Property="Height" Value="30" />
        <Setter Property="fa:Awesome.Content" Value="Close" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Foreground" Value="{DynamicResource CloseButtonColor}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="Border"
                        Background="{TemplateBinding Background}"
                        SnapsToDevicePixels="True">
                        <ContentPresenter Content="{TemplateBinding Content}" RecognizesAccessKey="True" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="FontSize" Value="22" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource ButtonColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource BackgroundColorText}" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderColor}" />
        <Setter Property="FontFamily" Value="{StaticResource Poppins-Semibold}" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="Border" Background="{TemplateBinding Background}" Width="85" Height="30" BorderThickness="2" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="10">
                        <ContentPresenter Content="{TemplateBinding Content}" TextElement.Foreground="{DynamicResource ButtonTextColor}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True" >
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource BackgroundColorText}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>    
        </Setter>
    </Style>
    
    <Style x:Key="AccountCard" TargetType="ContentControl">
        <Setter Property="Background" Value="{DynamicResource BackgroundColor}" />
        <Setter Property="Foreground" Value="{DynamicResource BackgroundColorText}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ContentControl">
                    <Border Background="{TemplateBinding Background}" CornerRadius="20" BorderBrush="{DynamicResource BorderColor}" BorderThickness="2" Margin="10">
                        <Border.Effect>
                            <DropShadowEffect BlurRadius="20" Color="{DynamicResource DropShadowColor}" Opacity="0.05" ShadowDepth="0" Direction="0">

                            </DropShadowEffect>
                        </Border.Effect>
                        <Grid Background="Transparent">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="0.7*"/>
                                <RowDefinition Height="0.3*"/>
                            </Grid.RowDefinitions>

                            <Button Style="{StaticResource CloseButton}" Grid.Row="0" Command="{Binding RemoveAccountCommand}"/>
                            <TextBlock Text="{Binding Username}" FontFamily="{StaticResource Poppins-Semibold}" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="22"></TextBlock>

                            <Button Style="{StaticResource ButtonStyle}" Grid.Row="1" Content="Login" Command="{Binding SelectAccountCommand}"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="NavigationRadioButton" TargetType="RadioButton">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Height" Value="50" />
        <Setter Property="Margin" Value="0,0,25,0" />
        <Setter Property="FontSize" Value="22" />
        <Setter Property="Foreground" Value="{DynamicResource BackgroundColorText}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                        <fa:FontAwesome x:Name="IconElement" Icon="{TemplateBinding Tag}" Foreground="{TemplateBinding Foreground}" VerticalAlignment="Center" HorizontalAlignment="Center" Width="Auto"  Height="Auto" Margin="0,0,8,0"/>

                        <ContentPresenter x:Name="TextElement" ContentSource="Content" RecognizesAccessKey="True" VerticalAlignment="Center" TextElement.Foreground="{TemplateBinding Foreground}">

                        </ContentPresenter>
                    </StackPanel>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            
                            <Setter TargetName="TextElement" Property="TextElement.Foreground" Value="{DynamicResource ButtonColor}"/>
                            <Setter TargetName="TextElement" Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect BlurRadius="0"  ShadowDepth="2" Color="{DynamicResource TextDropShadowColor}" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="TextElement" Property="TextElement.Foreground" Value="{DynamicResource ButtonColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="NavigationButton" TargetType="Button">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Height" Value="70" />
        <Setter Property="Margin" Value="0,0,25,0" />
        <Setter Property="FontSize" Value="22" />
        <Setter Property="Foreground" Value="{DynamicResource BackgroundColorText}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                        <fa:FontAwesome x:Name="IconElement" Icon="{TemplateBinding Tag}" Foreground="{TemplateBinding Foreground}" VerticalAlignment="Center" HorizontalAlignment="Center" Width="Auto"  Height="Auto" Margin="0,0,8,0"/>

                        <ContentPresenter x:Name="TextElement" ContentSource="Content" RecognizesAccessKey="True" VerticalAlignment="Center" TextElement.Foreground="{TemplateBinding Foreground}">

                        </ContentPresenter>
                    </StackPanel>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="IconElement" Property="Foreground" Value="{DynamicResource ButtonColor}"/>
                            <Setter TargetName="TextElement" Property="TextElement.Foreground" Value="{DynamicResource ButtonColor}"/>
                            <Setter TargetName="TextElement" Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect BlurRadius="0"  ShadowDepth="2" Color="{DynamicResource TextDropShadowColor}" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ToolTipStyle" TargetType="ToolTip">
        <Setter Property="Background" Value="{DynamicResource BackgroundColor}" />
        <Setter Property="Foreground" Value="{DynamicResource BackgroundColorText}" />
        <Setter Property="FontFamily" Value="{DynamicResource Poppins-Semibold}" />
    </Style>

    <Style x:Key="AddButtonInvalid" TargetType="Button" BasedOn="{StaticResource ButtonStyle}">
        <Setter Property="ToolTipService.InitialShowDelay" Value="100" />
        <Setter Property="ToolTipService.ToolTip">
            <Setter.Value>
                <ToolTip Style="{StaticResource ToolTipStyle}">
                    <TextBlock Text="Username or Password missing!" />
                </ToolTip>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="AddButtonValid" TargetType="Button" BasedOn="{StaticResource ButtonStyle}">
        
    </Style>

    <Style x:Key="AddButtonDone" TargetType="Button" BasedOn="{StaticResource ButtonStyle}">
        <Setter Property="Visibility" Value="Collapsed"/>
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
        <Setter Property="RenderTransform">
            <Setter.Value>
                <TransformGroup>
                    <ScaleTransform ScaleX="1" ScaleY="1"/>
                    <RotateTransform Angle="0"/>
                </TransformGroup>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <DataTrigger Binding="{Binding IsAdded}" Value="True">
                <Setter Property="Visibility" Value="Visible"/>
                <DataTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="(RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" To="1.2" Duration="0:0:0.2" AutoReverse="True"/>
                            <DoubleAnimation Storyboard.TargetProperty="(RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" To="1.2" Duration="0:0:0.2" AutoReverse="True"/>
                            <DoubleAnimation Storyboard.TargetProperty="(RenderTransform).(TransformGroup.Children)[1].(RotateTransform.Angle)" To="360" Duration="0:0:0.4"/>
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.EnterActions>
            </DataTrigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>